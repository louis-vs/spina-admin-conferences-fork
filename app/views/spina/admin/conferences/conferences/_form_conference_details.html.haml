%div{ data: { controller: 'select-options', 'select_options': { config_value: '{ "admin_conferences_conference_institution_id": { "value": "id", "text": "name" }, "admin_conferences_conference_room_ids": { "trigger": "admin_conferences_conference_institution_id", "key": "rooms", "value": "id", "text": "name" } }', record_value: @institutions } } }
  = render Spina::Forms::GroupComponent.new(label: Spina::Admin::Conferences::Conference.human_attribute_name(:name)) do
    = render Spina::Forms::TextFieldComponent.new(f, :name)
  = render Spina::Forms::GroupComponent.new(label: Spina::Admin::Conferences::Conference.human_attribute_name(:start_date)) do
    = f.date_field :start_date, value: (@conference.start_date.strftime("%Y-%m-%d") if @conference.start_date.present?), placeholder: Spina::Admin::Conferences::Conference.human_attribute_name(:start_date)
  = render Spina::Forms::GroupComponent.new(label: Spina::Admin::Conferences::Conference.human_attribute_name(:finish_date)) do
    = f.date_field :finish_date, value: (@conference.finish_date.strftime("%Y-%m-%d") if @conference.finish_date.present?), placeholder: Spina::Admin::Conferences::Conference.human_attribute_name(:finish_date)



  %div{ class: dom_class(@conference.events) }
    .page-form-label= Spina::Admin::Conferences::Conference.human_attribute_name :events
    .page-form-control
      .structure-form{ data: { controller: 'conference-events-form', 'conference_events_form': { active_class: 'active' } } }
        .structure-form-menu
          %ul= render partial: 'event_row', collection: f.object.events, as: :event
          = link_to 'plus', @conference.new_record? ? new_admin_conferences_event_path : new_admin_conferences_conference_event_path(@conference, index: @conference.events.size), remote: true, class: %w[button button-link icon], data: { 'spina--admin--conferences--conference_events_form_target': 'addFormLink', disable_with: '&#xF12C;' }

        .structure-form-content{ data: { action: 'conferenceEventFieldsAdded->conference-events-form#updateURL' } }
          = f.fields_for :events do |event_fields|
            = render 'event_fields', f: event_fields
